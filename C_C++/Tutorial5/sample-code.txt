Question 1:
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

pthread_mutex_t mutex;
int sum = 0;

void *adder(void* number);

int main() {
    int number = 0;

    pthread_t thread1, thread2, thread3;

    //intialise mutex
    pthread_mutex_init(&mutex, NULL);

    pthread_create(&thread1, NULL, adder, (void *) &number);
    pthread_create(&thread2, NULL, adder, (void *) &number);
    pthread_create(&thread3, NULL, adder, (void *) &number);

    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);
    pthread_join(thread3, NULL);

    pthread_mutex_destroy(&mutex);

    return 0;
}//end main

void *adder(void* number) {
    //Create lock
    pthread_mutex_lock(&mutex);
    int *num = (int*) (number);
    for(int i = 0; i < 100; i++) {
        *num += 1;
        sum += *num;
    }//end for
    printf("Sum :%d\n", sum);
    
    //unlock
    pthread_mutex_unlock(&mutex);
    return NULL;
}//end adder


Question 2:
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

pthread_mutex_t mutex;

void *printer(void *number);

int main()
{

    pthread_t thread1, thread2, thread3;

    int number = 0;

    pthread_mutex_init(&mutex, NULL);

    pthread_create(&thread1, NULL, printer, (void *)&number);
    pthread_create(&thread2, NULL, printer, (void *)&number);
    pthread_create(&thread3, NULL, printer, (void *)&number);

    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);
    pthread_join(thread3, NULL);

    pthread_mutex_destroy(&mutex);

    return 0;
} // end main

void *printer(void *number)
{
    pthread_mutex_lock(&mutex);
    int *num = (int *)(number);

    for (int i = 0; i < 20; i++)
    {
        *num += 1;
        printf("%d\n", *num);
    } // end for
    pthread_mutex_unlock(&mutex);
} // end printer


Question 3:
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

pthread_mutex_t mutex;
int func2result = 0;

void *func1();
void *func2();

int main()
{
    pthread_t thread1, thread2;


    pthread_create(&thread2, NULL, func2, NULL);
    pthread_join(thread2,NULL);

    pthread_create(&thread1, NULL, func1, NULL);
    pthread_join(thread1,NULL);

    return 0;
}

void *func1() {
    int num,sum;
    num = sum = 0;
    printf("Please enter a number\n");
    scanf("%d", &num);
    for(int i = 1; i <= num; i++){
        sum += i;
    }
    printf("func1 result: %d\n", sum);
    printf("Quotient %.2f", (float)sum/(float)func2result);
    return NULL;
}

void *func2() {
    int num1, num2, num3;
    num1 = num2 = num3 = 0;
    printf("Please enter 3 numbers\n");
    scanf("%d%d%d", &num1, &num2, &num3);
    func2result = (num1 + num2 + num3);
    printf("func2 result: %d\n", func2result);
    return NULL;
}